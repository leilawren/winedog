#!/bin/bash

# Colors
BLUE="\e[36m"
GREEN="\e[32m"
RED="\e[31m"
PINK="\e[95m"
RESET="\e[0m"

echo "   / \__"
echo "  (    @\___"
echo "  /         O"
echo " /   (_____/"
echo "/_____/   U"


# Welcome
echo -e "${BLUE}REMINDER: This script should be run from inside your repack folder, where setup.exe is located.${RESET}"
echo -e "${PINK}Hello, I'm Winedog, I'm here to help you install archived games${RESET}"
echo -e "${PINK}This is version is intended for Fitgirl Repacks${RESET}"
sleep 5
echo -e "${PINK}Where should I install your new prefix?${RESET}"
echo -e "${BLUE}Example: /home/<user>/Games/Half-Life-2/${RESET}"
read pfxdir


# Make new prefix and install
echo -e "${PINK}Okay! making a new wine prefix directory...${RESET}"
echo -e "${PINK}A Wine Config window will appear. Just click OK${RESET}"
sleep 5
mkdir -p $pfxdir
WINEPREFIX=$pfxdir winecfg &> /dev/null
echo -e "${GREEN}Configuration complete!${RESET}"


# Winetricks
echo -e "${PINK}Running a basic winetricks setup...${RESET}"
WINEPREFIX=$pfxdir winetricks -q cmd dxvk &> /dev/null


# Wine-9.0 puller script
curl -o wine-9.0.pkg.tar.zst https://archive.archlinux.org/packages/w/wine/wine-9.0-1-x86_64.pkg.tar.zst
mkdir wine-9.0/
tar --zstd -xvf wine-9.0.pkg.tar.zst -C wine-9.0/ &> /dev/null


# Game install
echo -e "${BLUE}INSTRUCTIONS!${RESET}"
sleep 2
echo -e "${PINK}The Fitgirl installer will run.${RESET}"
echo -e "${PINK}A wine-mono warning will appear. Click CANCEL${RESET}"
sleep 5
echo -e "${PINK}Be sure to install to the C: drive${RESET}"
echo -e "${BLUE}Example: C:\<name-of-game>${RESET}"
sleep 5
echo -e "${PINK}Do not update DirectX, DotNet4.0, etc...${RESET}"
echo -e "${PINK}Do not launch the game through the installer when complete.${RESET}"
sleep 5
WINEPREFIX=$pfxdir wine-9.0/usr/bin/wine setup.exe &> /dev/null


# Complete, optional winetricks
echo -e "${PINK}If all went well, your game has been installed.${RESET}"
echo -e "${GREEN}Would you like to install additional winetricks components now? (yes/no): ${RESET}"
read choice 
if [ "$choice" = "yes" ]; then
    echo -e "${PINK}Okay! Running winetricks GUI${RESET}"
    sleep 2
    echo -e "${BLUE}INSTRUCTIONS:${RESET}"
    echo -e "${PINK}Select the default prefix${RESET}"
    echo -e "${PINK}Select "Install a windows dll or component"${RESET}"
    echo -e "${PINK}Choose your components and select OKAY ${RESET}"
    echo -e "${PINK}Click Cancel, then Cancel again to close winetricks${RESET}"
    sleep 5
    WINEPREFIX=$pfxdir winetricks -q &> /dev/null
elif [ "$choice" = "no" ]; then
    echo -e "${PINK}Okay!${RESET}"
else 
	echo -e "${RED}lmao what? moving on...${RESET}"
fi

echo -e "${PINK}Creating game runner script...${RESET}"
echo -e "${GREEN}What is the full game directory? (I'll put the script here)${RESET}"
read gamedir
echo -e "${GREEN}What is the game's executable? Example: hl2.exe${RESET}"
read binary
cd $gamedir

cat > runner.sh <<EOF
#!/bin/bash
# This script was generated by winedog

# You can apprend windows launch options to the exe
# Example: hl2.exe -dx9 -nointro -map flatgrass

# For custom wine runners
# swap the "wine" command with the path to your custom wine
# Example: /home/<user>/wines/usr/bin/wine hl2.exe

# Lastly, run gamescope by entering the following before the wine command:
# gamescope -W 1920 -H 1080 -r 60 -f --adaptive-sync --force-grab-cursor -- wine
# change flags and resolution to fit your needs

##########################################
# Uncomment desired launch options below #
##########################################

# export DXVK_HUD=fps
# export DXVK_HUD=fps,frametimes,complier
# export DXVK_HUD=full
export WINEPREFIX=$pfxdir 
wine $gamedir$binary
EOF

echo "Setup Complete, exit code: $?"
exit